{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/tag-selector\";\nimport * as i2 from \"@angular/common\";\n\nfunction SidebarComponent_p_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"p\", 1);\n    i0.ɵɵlistener(\"click\", function SidebarComponent_p_0_Template_p_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const tag_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.handleClick(tag_r1.tag);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tag_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"textContent\", tag_r1.tag);\n    i0.ɵɵattribute(\"selected\", tag_r1.isSelected);\n  }\n}\n\nexport let SidebarComponent = /*#__PURE__*/(() => {\n  class SidebarComponent {\n    constructor(tagSelector) {\n      this.tagSelector = tagSelector;\n      this.tags = [];\n    }\n\n    ngOnInit() {\n      this.tagSelector.watch().subscribe(tags => this.tags = tags);\n    }\n\n    handleClick(event) {\n      this.tagSelector.toggle(event);\n    }\n\n  }\n\n  SidebarComponent.ɵfac = function SidebarComponent_Factory(t) {\n    return new (t || SidebarComponent)(i0.ɵɵdirectiveInject(i1.TagSelector));\n  };\n\n  SidebarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SidebarComponent,\n    selectors: [[\"sidebar\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"tag\", 3, \"textContent\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"tag\", 3, \"textContent\", \"click\"]],\n    template: function SidebarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, SidebarComponent_p_0_Template, 1, 2, \"p\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngForOf\", ctx.tags);\n      }\n    },\n    directives: [i2.NgForOf],\n    styles: [\"\"]\n  });\n  return SidebarComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}