{"ast":null,"code":"var _TagSelector_subject$, _TagSelector_tagSelection;\n\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"tslib\";\nimport * as Rx from 'rxjs';\nimport { splitTag } from 'src/app/utils/split-tag';\nimport { uniqueTag } from 'src/app/utils/unique-tag';\nimport * as i0 from \"@angular/core\";\nexport class TagSelector {\n  constructor() {\n    _TagSelector_subject$.set(this, new Rx.Subject());\n\n    _TagSelector_tagSelection.set(this, []);\n  }\n\n  load(routes) {\n    __classPrivateFieldSet(this, _TagSelector_tagSelection, uniqueTag(routes.flatMap(route => splitTag(route['tags']))).map(tag => ({\n      tag,\n      isSelected: false\n    })), \"f\");\n\n    this.next();\n  }\n\n  watch() {\n    return __classPrivateFieldGet(this, _TagSelector_subject$, \"f\").asObservable();\n  }\n\n  select(tag) {\n    const match = this.find(tag);\n\n    if (!match) {\n      return;\n    }\n\n    match.isSelected = true;\n    this.next();\n  }\n\n  deselect(tag) {\n    const match = this.find(tag);\n\n    if (!match) {\n      return;\n    }\n\n    match.isSelected = false;\n    this.next();\n  }\n\n  toggle(tag) {\n    const match = this.find(tag);\n\n    if (!match) {\n      return;\n    }\n\n    __classPrivateFieldGet(this, _TagSelector_tagSelection, \"f\").forEach(tag => tag.isSelected = tag === match);\n\n    this.next();\n  }\n\n  find(tag) {\n    return __classPrivateFieldGet(this, _TagSelector_tagSelection, \"f\").find(item => item.tag.toLowerCase() === tag.toLowerCase()) || null;\n  }\n\n  next() {\n    __classPrivateFieldGet(this, _TagSelector_subject$, \"f\").next(__classPrivateFieldGet(this, _TagSelector_tagSelection, \"f\"));\n  }\n\n}\n_TagSelector_subject$ = new WeakMap(), _TagSelector_tagSelection = new WeakMap();\n\nTagSelector.ɵfac = function TagSelector_Factory(t) {\n  return new (t || TagSelector)();\n};\n\nTagSelector.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TagSelector,\n  factory: TagSelector.ɵfac,\n  providedIn: 'root'\n});","map":null,"metadata":{},"sourceType":"module"}